{"version":3,"file":"omnedia-ngx-typewriter.mjs","sources":["../../../projects/ngx-typewriter/src/lib/ngx-typewriter.component.ts","../../../projects/ngx-typewriter/src/lib/ngx-typewriter.component.html","../../../projects/ngx-typewriter/src/public-api.ts","../../../projects/ngx-typewriter/src/omnedia-ngx-typewriter.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, Input, OnInit, signal} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {concat, concatMap, delay, from, ignoreElements, interval, map, Observable, of, repeat, skip, take} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"om-typewriter\",\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: \"./ngx-typewriter.component.html\",\r\n  styleUrl: \"./ngx-typewriter.component.scss\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NgxTypewriterComponent implements OnInit {\r\n  @Input({required: true, alias: \"words\"})\r\n  words!: string[];\r\n\r\n  @Input(\"disableLoop\")\r\n  disableLoop: boolean = false;\r\n\r\n  @Input(\"writeSpeed\")\r\n  writeSpeed: number = 40;\r\n\r\n  @Input(\"deleteDelay\")\r\n  deleteDelay: number = 3500;\r\n\r\n  @Input(\"writeDelay\")\r\n  writeDelay: number = 50;\r\n\r\n  @Input(\"startDelay\")\r\n  startDelay: number = 0;\r\n\r\n  @Input(\"styleClass\")\r\n  styleClass?: string;\r\n\r\n  @Input(\"textCursorColor\")\r\n  set textCursorColor(textCursorColor: string) {\r\n    this.style.update(prev => ({...prev, '--text-cursor-color': textCursorColor}));\r\n  }\r\n\r\n  typeWriterText$?: Observable<string>;\r\n\r\n  private wordsCount = 0;\r\n\r\n  style = signal({});\r\n\r\n  ngOnInit(): void {\r\n    if (!this.words) {\r\n      throw Error(\"[words] is required!\");\r\n    }\r\n\r\n    this.typeWriterText$ = this.typeWriteEffect()\r\n      .pipe(map((text) => text));\r\n  }\r\n\r\n  typeWriteEffect(): Observable<string> {\r\n    this.wordsCount = this.words.length;\r\n\r\n    return this.startTypewriter(this.words);\r\n  }\r\n\r\n  private startTypewriter(words: string[]): Observable<string> {\r\n    if (this.disableLoop) {\r\n      return concat(\r\n        of(null).pipe(delay(this.startDelay)),\r\n        from(words)\r\n      ).pipe(\r\n        skip(1),\r\n        concatMap((word) => this.typeEffect(word!))\r\n      );\r\n    }\r\n\r\n    return concat(\r\n      of(null).pipe(delay(this.startDelay)),\r\n      from(words)\r\n    ).pipe(\r\n      skip(1),\r\n      concatMap((word) => this.typeEffect(word!)),\r\n      repeat()\r\n    );\r\n  }\r\n\r\n  private typeEffect(word: string): Observable<string> {\r\n    if (this.disableLoop) {\r\n      this.wordsCount -= 1;\r\n    }\r\n\r\n    return concat(\r\n      this.typeWord(word),\r\n      of(\"\").pipe(delay(this.deleteDelay), ignoreElements()),\r\n      this.typeWord(word, true),\r\n      of(\"\").pipe(delay(this.writeDelay), ignoreElements())\r\n    );\r\n  }\r\n\r\n  private typeWord(word: string, backwards?: boolean): Observable<string> {\r\n    if (this.disableLoop && this.wordsCount <= 0 && backwards) {\r\n      return of(word);\r\n    }\r\n\r\n    return interval(this.writeSpeed).pipe(\r\n      map((x) => {\r\n        return backwards\r\n          ? word.substring(0, word.length - x)\r\n          : word.substring(0, x + 1);\r\n      }),\r\n      take(word.length + 1)\r\n    );\r\n  }\r\n}\r\n","<p class=\"om-typewriter-text\" [ngClass]=\"styleClass\" [ngStyle]=\"style()\">\r\n  &#8203;{{ typeWriterText$ | async }}\r\n</p>\r\n","/*\r\n * Public API Surface of ngx-typewriter\r\n */\r\n\r\nexport * from './lib/ngx-typewriter.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}