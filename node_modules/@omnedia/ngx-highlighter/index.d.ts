import * as i0 from '@angular/core';
import { AfterViewInit, OnDestroy, OnChanges, ElementRef, SimpleChanges } from '@angular/core';

type AnnotationAction = 'highlight' | 'underline' | 'box' | 'circle' | 'strike-through' | 'crossed-off' | 'bracket';
type BracketType = 'left' | 'right' | 'top' | 'bottom';

declare class NgxHighlighterComponent implements AfterViewInit, OnDestroy, OnChanges {
    private platformId;
    wrapperRef: ElementRef<HTMLElement>;
    action: AnnotationAction;
    color: string;
    strokeWidth: number;
    animationDuration: number;
    iterations: number;
    padding: number;
    multiline: boolean;
    animateOnlyOnce: boolean;
    brackets: BracketType | BracketType[];
    animate: boolean;
    isInView: i0.WritableSignal<boolean>;
    private io?;
    private annotation?;
    private animatedOnce;
    constructor(platformId: object);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private createAnnotation;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxHighlighterComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxHighlighterComponent, "om-highlighter", never, { "action": { "alias": "action"; "required": false; }; "color": { "alias": "color"; "required": false; }; "strokeWidth": { "alias": "strokeWidth"; "required": false; }; "animationDuration": { "alias": "animationDuration"; "required": false; }; "iterations": { "alias": "iterations"; "required": false; }; "padding": { "alias": "padding"; "required": false; }; "multiline": { "alias": "multiline"; "required": false; }; "animateOnlyOnce": { "alias": "animateOnlyOnce"; "required": false; }; "brackets": { "alias": "brackets"; "required": false; }; "animate": { "alias": "animate"; "required": false; }; }, {}, never, ["*"], true, never>;
}

export { NgxHighlighterComponent };
export type { AnnotationAction, BracketType };
